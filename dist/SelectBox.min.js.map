{"version":3,"file":"SelectBox.min.js","sources":["SelectBox.js"],"sourcesContent":["(function(){\n\n    var _template = [\n        \"<div class='selectBox {{ngSelectBoxClass}}' ng-click='show()'>\",\n        \"<span class='selected {{ngPlaceholderClass}}'>{{label}}</span>\",\n        \"<span class='selectArrow'>&#9660</span>\",\n        \"<input type='hidden' ng-model='ngSelectedValue' name='{{ngHtmlName}}' dynamic-name ng-required='{{ngIsRequired}}'/>\",\n        \"</div>\"\n    ].join(\"\\n\");\n\n    angular.module('$selectBox', []).directive('selectBox', function () {\n\n        return {\n            restrict: 'E',\n            require: ['ngModel' ],\n            template: _template,\n            scope: {\n                ngSelectedValue: \"=\",\n                ngTitle: \"@\",\n                ngItemName: \"@\",\n                ngItemId: \"@\",\n                ngData: \"@\",\n                ngPopup: \"@\",\n                ngPopupClass: \"@\",\n                ngHtmlName: \"@\",\n                ngIsRequired: \"@\",\n                ngPlaceholder: \"@\",\n                ngHeaderClass: \"@\",\n                ngSelectChanged: \"&\",\n                ngPlaceholderClass: \"@\",\n                ngSelectBoxClass: \"@\"\n            },\n            controller: ['$scope', '$element', '$ionicModal', '$ionicPopup', '$parse', function ($scope, $element, $ionicModal, $ionicPopup, $parse) {\n\n                $scope.ngPlaceholder = ($scope.ngPlaceholder) ? $scope.ngPlaceholder : '';\n                $scope.ngIsRequired = ($scope.ngIsRequired) ? JSON.parse($scope.ngIsRequired || false) : false;\n                $scope.ngPopup = ($scope.ngPopup) ? JSON.parse($scope.ngPopup || false) : false;\n                $scope.ngPopupClass = ($scope.ngPopupClass) ? $scope.ngPopupClass : '';\n                $scope.label = $scope.ngPlaceholder;\n                $scope.ngPlaceholderClass = ($scope.ngPlaceholderClass) ? $scope.ngPlaceholderClass : '';\n                $scope.ngSelectBoxClass = ($scope.ngSelectBoxClass) ? $scope.ngSelectBoxClass : '';\n\n                $scope.show = function () {\n                    var val = $parse($scope.ngData);\n                    $scope.ngDataObjects = val($scope.$parent);\n                    $scope.ngHeaderClass = ($scope.ngHeaderClass) ? $scope.ngHeaderClass : \"\";\n                    if(JSON.parse($scope.ngPopup || false)) {\n                        $scope.showPopup();\n                    } else {\n                        $scope.showSelectModal();\n                    }\n                };\n                $scope.showSelectModal = function () {\n                    $scope.renderModal();\n                    $scope.modal.show().then(function(modal) {\n                        $scope.modal.el.style.zIndex = 99;\n                    });\n                };\n                $scope.showPopup = function () {\n                    $scope.renderPopup();\n                };\n\n                $scope.closeSelectModal = function () {\n                    if($scope.modal)\n                        $scope.modal.hide();\n                };\n                $scope.closePopup = function () {\n                    if($scope.popup)\n                        $scope.popup.close();\n                };\n\n                $scope.$on('$destroy', function (id) {\n                    if($scope.modal)\n                        $scope.modal.remove();\n                });\n\n                $scope.$watch('ngPlaceholder', function (newValue, oldValue) {\n                  if (oldValue == $scope.label) {\n                    $scope.setPlaceholderLabel(newValue)\n                  }\n                });\n\n                $scope.$watch('ngSelectedValue', function (newValue, oldValue) {\n                    //console.log('selected value changed from ', oldValue, ' to ', newValue);\n                    if(undefined !== newValue) {\n                        var val = $parse($scope.ngData);\n                        $scope.ngDataObjects = val($scope.$parent);\n                        var i=0, len=$scope.ngDataObjects.length;\n                        for (; i<len; i++) {\n                            if ($scope.ngDataObjects[i][$scope.ngItemId] == newValue) {\n                                //console.log('found descr for ', newValue, ' = ',$scope.ngDataObjects[i][$scope.ngItemName]);\n                                $scope.setPlaceholderLabel($scope.ngDataObjects[i][$scope.ngItemName]);\n                            }\n                        }\n                    } else\n                        $scope.setPlaceholderLabel($scope.ngPlaceholder);\n                });\n\n                $scope.renderModal = function () {\n                    $scope.modal = $ionicModal.fromTemplate(\n                          '<ion-modal-view id=\"select\" class=\"ionic-select-enable '+$scope.ngPopupClass+'\">'\n                        + '<ion-header-bar class=\"' + $scope.ngHeaderClass + '\">'\n                        + '<h1 class=\"title\">' + $scope.ngTitle + '</h1>'\n                        + ' <a ng-click=\"closeSelectModal()\" class=\"button button-icon icon ion-close ionic-select-enable\"></a>'\n                        + '</ion-header-bar>'\n                        + '<ion-content>'\n                        + '<ion-list class=\"ionic-select-enable\">'\n                        + '<ion-item class=\"ionic-select-enable\" ng-click=\"clickItem(item);' + '\" ng-repeat=\"item in ngDataObjects\" ng-bind-html=\"item[\\'' + $scope.ngItemName + '\\']\"></ion-item>'\n                        + '</ion-list>'\n                        + ' </ion-content>'\n                        + '</ion-modal-view>', {\n                        scope: $scope,\n                        animation: 'slide-in-right',\n                        backdropClickToClose : false\n                    });\n                };\n\n                $scope.renderPopup = function () {\n                    $scope.popup = $ionicPopup.alert({\n                        title: $scope.ngTitle,\n                        scope: $scope,\n                        template: '<ion-list class=\"ionic-select-enable\">'\n                        + '<ion-item class=\"ionic-select-enable item-text-wrap\" ng-click=\"clickItem(item);' + '\" ng-repeat=\"item in ngDataObjects\" ng-bind-html=\"item[\\'' + $scope.ngItemName + '\\']\"></ion-item>'\n                        + '</ion-list>',\n                        cssClass: '' + $scope.ngPopupClass\n                    });\n                };\n\n                $scope.clickItem = function (item) {\n                    $scope.ngSelectedValue = item[$scope.ngItemId];\n                    $scope.label = item[$scope.ngItemName];\n                    $scope.ngPopup ? $scope.closePopup() : $scope.closeSelectModal();\n                    $scope.ngSelectChanged({selectedValue: $scope.ngSelectedValue});\n                };\n\n                $scope.setPlaceholderLabel = function(label) {\n                    $scope.label =  label;\n                };\n\n                $scope.$on('reset', function(){\n                    $scope.setPlaceholderLabel($scope.ngPlaceholder);\n                    $scope.ngSelectedValue = null;\n                });\n            }],\n            compile: function ($element, $scope) {\n                var input = $element.find('input.selected');\n                angular.forEach({\n                    'name': $scope.name,\n                    'ng-model': $scope.ngSelectedValue\n                }, function (value, name) {\n                    if (angular.isDefined(value)) {\n                        input.attr(name, value);\n                    }\n                });\n            }\n        };\n    }).directive('dynamicName', function() {\n        return {\n            restrict: 'A',\n            priority: -1,\n            require: ['ngModel'],\n            link: function (scope, element, attr, ngModel) {\n                ngModel[0].$name = attr.name;\n            }\n        };\n    });\n})();\n"],"names":["_template","join","angular","module","directive","restrict","require","template","scope","ngSelectedValue","ngTitle","ngItemName","ngItemId","ngData","ngPopup","ngPopupClass","ngHtmlName","ngIsRequired","ngPlaceholder","ngHeaderClass","ngSelectChanged","ngPlaceholderClass","ngSelectBoxClass","controller","$scope","$element","$ionicModal","$ionicPopup","$parse","JSON","parse","label","show","val","ngDataObjects","$parent","showPopup","showSelectModal","renderModal","modal","then","el","style","zIndex","renderPopup","closeSelectModal","hide","closePopup","popup","close","$on","id","remove","$watch","newValue","oldValue","setPlaceholderLabel","undefined","i","len","length","fromTemplate","animation","backdropClickToClose","alert","title","cssClass","clickItem","item","selectedValue","compile","input","find","forEach","name","ng-model","value","isDefined","attr","priority","link","element","ngModel","$name"],"mappings":"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"}